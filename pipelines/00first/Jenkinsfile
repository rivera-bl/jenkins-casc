pipeline {
    agent any
    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/rivera-bl/spring-boot-kubernetes'
            }
        }
        stage('SonarCloud') {
          environment {
            SCANNER_HOME = tool 'SonarQubeScanner'
            ORGANIZATION = "rivera-bl"
            PROJECT_NAME = "spring-boot-kubernetes"
          }
          steps {
            withSonarQubeEnv(installationName: 'SonarCloudURL', credentialsId: 'sonarcloud') {
                sh '''$SCANNER_HOME/bin/sonar-scanner -Dsonar.organization=$ORGANIZATION \
                -Dsonar.java.binaries=.mvn/wrapper/ \
                -Dsonar.projectKey=$PROJECT_NAME \
                -Dsonar.sources=.'''
            }
          }
        }
//        stage("QualityGate") {
//          steps {
//            timeout(time: 1, unit: 'MINUTES') {
//                waitForQualityGate abortPipeline: true
//            }
//          }
//        }
        stage('OWASP DependencyCheck') {
            steps {  
             withMaven(maven : 'mvn-3.6.3') {  
              sh 'mvn dependency-check:check'  
             }  

            dependencyCheckPublisher pattern: 'dependency-check-report.xml'
            }
        }
    }
}
